services:
  redis:
    image: redis:7.0-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 512M
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=ftuser
      - POSTGRES_PASSWORD=ftpassword
      - POSTGRES_DB=fasttap
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../deployment/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: 768M
  backend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.backend
    env_file:
      - ../fast-tap-backend/.env
    environment:
      - PORT=5000
      - ENABLE_REDIS=true
      - REDIS_URL=redis://redis:6379
      - MAX_PLAYERS_PER_ROOM=500
      - CORS_ORIGIN=https://te-itx-2025.site
      - GAME_DURATION=3000000
      - SMTP_HOST=smtp-send-only
      - SMTP_PORT=25
      - SMTP_USER=
      - SMTP_PASS=
      - SMTP_FROM=no-reply@te-itx-2025.site
      - SESSION_NAME=itx.sid
      - SESSION_SECRET=0a8f6c9b3e2d7f1e4c5a9b8f2d3c1e7f9a0b1c2d3e4f5a6b7c8d9e0f1a2b3c4
      - JWT_SECRET=e14c0768409a339e0bbc407d1c568130
      - ADMIN_ALLOWED_ROLES=admin
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.3'
          memory: 4096M
  frontend:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.frontend
    # Published host port 8080 -> container 80 so host-level nginx (running on host:80)
    # can proxy to 127.0.0.1:8080. This avoids conflicts with host nginx listening on
    # port 80 and keeps compose services reachable from host nginx.
    ports:
      - "8080:80"
    environment:
      - NEXT_PUBLIC_BACKEND_URL=http://te-itx-2025.site
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1536M
  smtp-send-only:
    build:
      context: ./smtp
    image: itx/smtp-send-only:latest
    restart: unless-stopped
    env_file:
      - ./smtp/.env      # or move vars to the root .env if you prefer
    environment:
      - POSTFIX_MYDOMAIN=${POSTFIX_MYDOMAIN:-te-itx-2025.site}
    # expose port 25 to other containers (internal Docker network)
    ports:
      - "2525:25"    # optional: publish to host for debugging; remove if you don't want host binding
    volumes:
      - smtp-postfix-spool:/var/spool/postfix
      - smtp-postfix-lib:/var/lib/postfix
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
volumes:
  redis-data:
  postgres-data:
  smtp-postfix-spool:
  smtp-postfix-lib: